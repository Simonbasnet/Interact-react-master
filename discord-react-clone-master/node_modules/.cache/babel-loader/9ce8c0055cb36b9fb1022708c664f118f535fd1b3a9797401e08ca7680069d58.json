{"ast":null,"code":"import _defineProperty from \"C:/Users/asus/Documents/discord-react-clone-master/discord-react-clone-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/asus/Documents/discord-react-clone-master/discord-react-clone-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"C:/Users/asus/Documents/discord-react-clone-master/discord-react-clone-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/asus/Documents/discord-react-clone-master/discord-react-clone-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/asus/Documents/discord-react-clone-master/discord-react-clone-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/asus/Documents/discord-react-clone-master/discord-react-clone-master/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/asus/Documents/discord-react-clone-master/discord-react-clone-master/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _taggedTemplateLiteral from \"C:/Users/asus/Documents/discord-react-clone-master/discord-react-clone-master/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\discord-react-clone-master\\\\discord-react-clone-master\\\\src\\\\components\\\\App.js\",\n  _templateObject;\nimport React from 'react';\nimport styled from 'styled-components';\nimport ScrollbarStyles from './ScrollbarStyles';\nimport GlobalStyle from './GlobalStyle';\nimport Navbar from './Navbar';\nimport Channels from './Channels';\nimport Chat from './Chat';\nimport MemberCardPopup from './MemberCardPopup';\nimport TooltipsContainer from './Tooltip/TooltipsContainer';\nimport data from '../data';\nvar StyledApp = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: flex;\\n  min-height: 100%;\\n  width: 100%;\\n\\n  .app-content {\\n    flex: 1 1 auto;\\n  }\\n\"])));\n_c = StyledApp;\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n  var _super = _createSuper(App);\n  function App() {\n    var _this;\n    _classCallCheck(this, App);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      currentArea: 'CHAT',\n      selectedGuildId: 1111,\n      selectedChannelsId: {},\n      selectedPrivateChannelId: 333\n    };\n    _this.getSelectedGuild = function () {\n      var selectedGuildId = _this.state.selectedGuildId;\n      return selectedGuildId ? data.guilds.find(function (g) {\n        return g.id === selectedGuildId;\n      }) : null;\n    };\n    _this.getGuildSelectedChannel = function () {\n      var _ref;\n      var guild = _this.getSelectedGuild();\n      if (!guild) return null;\n      var categoriesChannels = guild.categories.map(function (c) {\n        return c.channels;\n      });\n      // Here we could use flat() to merge the channels but it is still experimental\n      var channels = (_ref = []).concat.apply(_ref, _toConsumableArray(categoriesChannels));\n      var id = _this.state.selectedChannelsId[guild.id] || guild.welcomeChannelId;\n      return channels.find(function (channel) {\n        return channel.id === id;\n      });\n    };\n    _this.getSelectedChannelData = function () {\n      var _this$state = _this.state,\n        currentArea = _this$state.currentArea,\n        selectedPrivateChannelId = _this$state.selectedPrivateChannelId;\n      if (currentArea === 'HOME') {\n        var dm = data.directMessages.find(function (dm) {\n          return dm.id === selectedPrivateChannelId;\n        });\n        return {\n          id: selectedPrivateChannelId,\n          name: data.users[dm.userId].username,\n          messages: dm.messages\n        };\n      }\n      if (currentArea === 'CHAT') {\n        var channel = _this.getGuildSelectedChannel();\n        return {\n          id: channel.id,\n          name: channel.name,\n          messages: channel.messages || []\n        };\n      }\n    };\n    _this.handleHomeClick = function () {\n      _this.setState({\n        selectedGuildId: null,\n        currentArea: 'HOME'\n      });\n    };\n    _this.handleGuildClick = function (guildId) {\n      _this.setState({\n        selectedGuildId: guildId,\n        currentArea: 'CHAT'\n      });\n    };\n    _this.handleChannelClick = function (guildId, channelId) {\n      var currentArea = _this.state.currentArea;\n      if (currentArea === 'HOME') {\n        _this.setState({\n          selectedPrivateChannelId: channelId\n        });\n      }\n      if (currentArea === 'CHAT') {\n        _this.setState({\n          selectedChannelsId: _objectSpread(_objectSpread({}, _this.state.selectedChannelsId), {}, _defineProperty({}, guildId, channelId))\n        });\n      }\n    };\n    return _this;\n  }\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var selectedGuildId = this.state.selectedGuildId;\n      var selectedGuild = this.getSelectedGuild();\n      var showPrivateChannels = !selectedGuild;\n      var selectedChannelData = this.getSelectedChannelData();\n      return /*#__PURE__*/React.createElement(StyledApp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(GlobalStyle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ScrollbarStyles, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Navbar, {\n        onHomeClick: this.handleHomeClick,\n        onGuildClick: this.handleGuildClick,\n        selectedGuildId: selectedGuildId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Channels, {\n        showPrivateChannels: showPrivateChannels,\n        guild: selectedGuild,\n        selectedChannelId: selectedChannelData.id,\n        onChannelClick: this.handleChannelClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Chat, {\n        className: \"app-content\",\n        isPrivate: showPrivateChannels,\n        channelName: selectedChannelData.name,\n        guild: selectedGuild,\n        messages: selectedChannelData.messages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(TooltipsContainer, {\n        ref: function ref(node) {\n          TooltipsContainer.instance = TooltipsContainer.instance || node;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(MemberCardPopup, {\n        guildRolesList: selectedGuild ? selectedGuild.roles : [],\n        ref: function ref(node) {\n          MemberCardPopup.instance = MemberCardPopup.instance || node;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return App;\n}(React.Component);\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"StyledApp\");","map":{"version":3,"names":["React","styled","ScrollbarStyles","GlobalStyle","Navbar","Channels","Chat","MemberCardPopup","TooltipsContainer","data","StyledApp","div","_templateObject","_taggedTemplateLiteral","_c","App","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","currentArea","selectedGuildId","selectedChannelsId","selectedPrivateChannelId","getSelectedGuild","guilds","find","g","id","getGuildSelectedChannel","_ref","guild","categoriesChannels","categories","map","c","channels","_toConsumableArray","welcomeChannelId","channel","getSelectedChannelData","_this$state","dm","directMessages","name","users","userId","username","messages","handleHomeClick","setState","handleGuildClick","guildId","handleChannelClick","channelId","_objectSpread","_defineProperty","_createClass","key","value","render","selectedGuild","showPrivateChannels","selectedChannelData","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onHomeClick","onGuildClick","selectedChannelId","onChannelClick","className","isPrivate","channelName","ref","node","instance","guildRolesList","roles","Component","$RefreshReg$"],"sources":["C:/Users/asus/Documents/discord-react-clone-master/discord-react-clone-master/src/components/App.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport ScrollbarStyles from './ScrollbarStyles';\nimport GlobalStyle from './GlobalStyle';\nimport Navbar from './Navbar';\nimport Channels from './Channels';\nimport Chat from './Chat';\nimport MemberCardPopup from './MemberCardPopup';\nimport TooltipsContainer from './Tooltip/TooltipsContainer';\n\nimport data from '../data';\n\nconst StyledApp = styled.div`\n  display: flex;\n  min-height: 100%;\n  width: 100%;\n\n  .app-content {\n    flex: 1 1 auto;\n  }\n`;\n\nclass App extends React.Component {\n  state = {\n    currentArea: 'CHAT',\n    selectedGuildId: 1111,\n    selectedChannelsId: {},\n    selectedPrivateChannelId: 333\n  };\n\n  getSelectedGuild = () => {\n    const { selectedGuildId } = this.state;\n    return selectedGuildId ? data.guilds.find(g => g.id === selectedGuildId) : null;\n  };\n\n  getGuildSelectedChannel = () => {\n    const guild = this.getSelectedGuild();\n    if (!guild) return null;\n\n    const categoriesChannels = guild.categories.map(c => c.channels);\n    // Here we could use flat() to merge the channels but it is still experimental\n    const channels = [].concat(...categoriesChannels);\n\n    const id = this.state.selectedChannelsId[guild.id] || guild.welcomeChannelId;\n    return channels.find(channel => channel.id === id);\n  };\n\n  getSelectedChannelData = () => {\n    const { currentArea, selectedPrivateChannelId } = this.state;\n    if (currentArea === 'HOME') {\n      const dm = data.directMessages.find(dm => dm.id === selectedPrivateChannelId);\n      return {\n        id: selectedPrivateChannelId,\n        name: data.users[dm.userId].username,\n        messages: dm.messages\n      };\n    }\n    if (currentArea === 'CHAT') {\n      const channel = this.getGuildSelectedChannel();\n      return {\n        id: channel.id,\n        name: channel.name,\n        messages: channel.messages || []\n      };\n    }\n  };\n\n  handleHomeClick = () => {\n    this.setState({ selectedGuildId: null, currentArea: 'HOME' });\n  };\n\n  handleGuildClick = guildId => {\n    this.setState({ selectedGuildId: guildId, currentArea: 'CHAT' });\n  };\n\n  handleChannelClick = (guildId, channelId) => {\n    const { currentArea } = this.state;\n    if (currentArea === 'HOME') {\n      this.setState({\n        selectedPrivateChannelId: channelId\n      });\n    }\n    if (currentArea === 'CHAT') {\n      this.setState({\n        selectedChannelsId: {\n          ...this.state.selectedChannelsId,\n          [guildId]: channelId\n        }\n      });\n    }\n  };\n\n  render() {\n    const { selectedGuildId } = this.state;\n    const selectedGuild = this.getSelectedGuild();\n    const showPrivateChannels = !selectedGuild;\n    const selectedChannelData = this.getSelectedChannelData();\n\n    return (\n      <StyledApp>\n        <GlobalStyle />\n        <ScrollbarStyles />\n\n        <Navbar\n          onHomeClick={this.handleHomeClick}\n          onGuildClick={this.handleGuildClick}\n          selectedGuildId={selectedGuildId}\n        />\n        <Channels\n          showPrivateChannels={showPrivateChannels}\n          guild={selectedGuild}\n          selectedChannelId={selectedChannelData.id}\n          onChannelClick={this.handleChannelClick}\n        />\n        <Chat\n          className=\"app-content\"\n          isPrivate={showPrivateChannels}\n          channelName={selectedChannelData.name}\n          guild={selectedGuild}\n          messages={selectedChannelData.messages}\n        />\n\n        <TooltipsContainer\n          ref={node => {\n            TooltipsContainer.instance = TooltipsContainer.instance || node;\n          }}\n        />\n        <MemberCardPopup\n          guildRolesList={selectedGuild ? selectedGuild.roles : []}\n          ref={node => {\n            MemberCardPopup.instance = MemberCardPopup.instance || node;\n          }}\n        />\n      </StyledApp>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}