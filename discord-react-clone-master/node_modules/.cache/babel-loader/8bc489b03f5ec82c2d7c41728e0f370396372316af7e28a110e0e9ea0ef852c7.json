{"ast":null,"code":"import _slicedToArray from \"C:/Users/asus/Documents/discord-react-clone-master/discord-react-clone-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _taggedTemplateLiteral from \"C:/Users/asus/Documents/discord-react-clone-master/discord-react-clone-master/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\discord-react-clone-master\\\\discord-react-clone-master\\\\src\\\\components\\\\Chat\\\\EmojiPickerButton.js\",\n  _templateObject,\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nvar EMOJIS_COUNT = 50;\nvar EMOJIS_COLUMNS = 11;\nvar ITEM_SIZE = 22;\nvar StyledEmojiPickerButton = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  background: 0;\\n  padding: 0;\\n  margin: 0;\\n  border: 0;\\n  outline: 0;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 34px;\\n  height: 44px;\\n  flex: 0 0 auto;\\n\\n  :hover .sprite {\\n    filter: grayscale(0%);\\n    opacity: 1;\\n    transform: scale(1.275);\\n  }\\n\\n  .sprite {\\n    width: 22px;\\n    height: 22px;\\n\\n    background-image: url('https://i.imgur.com/GCsoD7z.png');\\n    background-repeat: no-repeat;\\n    background-size: 242px 110px;\\n\\n    transition: filter 0.1s ease-in-out, opacity 0.1s ease-in-out, transform 0.1s ease-in-out;\\n    filter: grayscale(100%);\\n    opacity: 0.3;\\n  }\\n\"])));\n_c = StyledEmojiPickerButton;\nvar EmojiPickerButton = function EmojiPickerButton() {\n  _s();\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    index = _useState2[0],\n    setIndex = _useState2[1];\n  var pickRandomIndex = function pickRandomIndex() {\n    setIndex(Math.floor(Math.random() * EMOJIS_COUNT));\n  };\n  var x = index % EMOJIS_COLUMNS * ITEM_SIZE;\n  var y = Math.floor(index / EMOJIS_COLUMNS) * ITEM_SIZE;\n  var backgroundPosition = \"-\".concat(x, \"px -\").concat(y, \"px\");\n  return /*#__PURE__*/React.createElement(StyledEmojiPickerButton, {\n    onMouseEnter: pickRandomIndex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sprite\",\n    style: {\n      backgroundPosition: backgroundPosition\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n_s(EmojiPickerButton, \"x2oTrUAHknTo02Ld7gcDOqaxQ8E=\");\n_c2 = EmojiPickerButton;\nexport default EmojiPickerButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledEmojiPickerButton\");\n$RefreshReg$(_c2, \"EmojiPickerButton\");","map":{"version":3,"names":["React","useState","styled","EMOJIS_COUNT","EMOJIS_COLUMNS","ITEM_SIZE","StyledEmojiPickerButton","button","_templateObject","_taggedTemplateLiteral","_c","EmojiPickerButton","_s","_useState","_useState2","_slicedToArray","index","setIndex","pickRandomIndex","Math","floor","random","x","y","backgroundPosition","concat","createElement","onMouseEnter","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","style","_c2","$RefreshReg$"],"sources":["C:/Users/asus/Documents/discord-react-clone-master/discord-react-clone-master/src/components/Chat/EmojiPickerButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst EMOJIS_COUNT = 50;\nconst EMOJIS_COLUMNS = 11;\nconst ITEM_SIZE = 22;\n\nconst StyledEmojiPickerButton = styled.button`\n  background: 0;\n  padding: 0;\n  margin: 0;\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 34px;\n  height: 44px;\n  flex: 0 0 auto;\n\n  :hover .sprite {\n    filter: grayscale(0%);\n    opacity: 1;\n    transform: scale(1.275);\n  }\n\n  .sprite {\n    width: 22px;\n    height: 22px;\n\n    background-image: url('https://i.imgur.com/GCsoD7z.png');\n    background-repeat: no-repeat;\n    background-size: 242px 110px;\n\n    transition: filter 0.1s ease-in-out, opacity 0.1s ease-in-out, transform 0.1s ease-in-out;\n    filter: grayscale(100%);\n    opacity: 0.3;\n  }\n`;\n\nconst EmojiPickerButton = () => {\n  const [index, setIndex] = useState(0);\n\n  const pickRandomIndex = () => {\n    setIndex(Math.floor(Math.random() * EMOJIS_COUNT));\n  };\n\n  const x = (index % EMOJIS_COLUMNS) * ITEM_SIZE;\n  const y = Math.floor(index / EMOJIS_COLUMNS) * ITEM_SIZE;\n  const backgroundPosition = `-${x}px -${y}px`;\n\n  return (\n    <StyledEmojiPickerButton onMouseEnter={pickRandomIndex}>\n      <div className=\"sprite\" style={{ backgroundPosition }} />\n    </StyledEmojiPickerButton>\n  );\n};\n\nexport default EmojiPickerButton;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,IAAMC,YAAY,GAAG,EAAE;AACvB,IAAMC,cAAc,GAAG,EAAE;AACzB,IAAMC,SAAS,GAAG,EAAE;AAEpB,IAAMC,uBAAuB,GAAGJ,MAAM,CAACK,MAAM,CAAAC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,6pBAgC5C;AAACC,EAAA,GAhCIJ,uBAAuB;AAkC7B,IAAMK,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;EAAAC,EAAA;EAC9B,IAAAC,SAAA,GAA0BZ,QAAQ,CAAC,CAAC,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BD,QAAQ,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGlB,YAAY,CAAC,CAAC;EACpD,CAAC;EAED,IAAMmB,CAAC,GAAIN,KAAK,GAAGZ,cAAc,GAAIC,SAAS;EAC9C,IAAMkB,CAAC,GAAGJ,IAAI,CAACC,KAAK,CAACJ,KAAK,GAAGZ,cAAc,CAAC,GAAGC,SAAS;EACxD,IAAMmB,kBAAkB,OAAAC,MAAA,CAAOH,CAAC,UAAAG,MAAA,CAAOF,CAAC,OAAI;EAE5C,oBACEvB,KAAA,CAAA0B,aAAA,CAACpB,uBAAuB;IAACqB,YAAY,EAAET,eAAgB;IAAAU,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrDlC,KAAA,CAAA0B,aAAA;IAAKS,SAAS,EAAC,QAAQ;IAACC,KAAK,EAAE;MAAEZ,kBAAkB,EAAlBA;IAAmB,CAAE;IAAAI,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACjC,CAAC;AAE9B,CAAC;AAACtB,EAAA,CAhBID,iBAAiB;AAAA0B,GAAA,GAAjB1B,iBAAiB;AAkBvB,eAAeA,iBAAiB;AAAC,IAAAD,EAAA,EAAA2B,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}